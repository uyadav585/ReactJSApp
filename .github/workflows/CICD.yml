name: deploy react app

on:
    push:
        branches: [main]

# remember the basics and you will understand every code in your mind


jobs:
    build-and-publish:
        name: Build and Publish Docker Image
        runs-on: ubuntu-latest
        steps:
            - name: checkout source
              uses: actions/checkout@v3
            - name: Build the docker image
              run: docker build --file Dockerfile --tag uyadav585/reactjs-app:${{ github.sha }} --build-arg REACT_APP_NODE_ENV='production' --build-arg REACT_APP_SERVER_BASE_URL=${{ secrets.REACT_APP_SERVER_BASE_URL }} .

            - name: Publish to Registry
              uses: elgohr/Publish-Docker-Github-Action@v4
              with:
                name: uyadav585/reactjs-app
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
                tags: "latest,${{ github.sha }}"



    deploy:
        needs: build-and-publish
        runs-on: self-hosted
        steps:
            - name: Ensure Docker socket permissions
              run:  sudo chmod 666 /var/run/docker.sock

            - name: remove running container
              run:  docker rm -f reactjs-app-container || true

            - name: List image IDs of running containers
              run : docker ps --format '{{.Image}}' | sort | uniq > running_images.txt            

            - name: List all image IDs
              run: docker images --format '{{.Repository}}:{{.Tag}}' | sort | uniq > all_images.txt

            - name: Find unused images
              run: comm -23 all_images.txt running_images.txt > unused_images.txt

            - name: Delete unused images
              run: | 
                while read -r image; do
                    docker rmi $image
                done < unused_images.txt

            - name: Clean up temporary files
              run: rm running_images.txt all_images.txt unused_images.txt

            - name: pull image from dockerhub
              run:  docker pull uyadav585/reactjs-app:${{ github.sha }}

            - name: run docker container
              run:  docker run -d -p 3000:80 --name reactjs-app-container uyadav585/reactjs-app:${{ github.sha }}   

# lets see error may come in .env file